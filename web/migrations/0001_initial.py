# Generated by Django 3.1.6 on 2021-07-04 05:40

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Household_filters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=120, verbose_name='Название')),
                ('Image', models.ImageField(upload_to='householdfilters/', verbose_name='Изображение')),
                ('For_systems', models.CharField(blank=True, choices=[('Бустерные насосы (помпы)', 'Бустерные насосы (помпы)'), ('Краны', 'Краны'), ('Мембранные баки', 'Мембранные баки'), ('Постфильтры и паки', 'Постфильтры и паки'), ('Прочее', 'Прочее')], max_length=50, verbose_name='Для колб')),
                ('Pump', models.CharField(blank=True, choices=[('Есть', 'Есть'), ('Нет', 'Нет')], max_length=50, verbose_name='Наличие насоса')),
                ('Tank_capacity', models.CharField(blank=True, choices=[('Отсутствует', 'Отсутствует'), ('До 12 литров', 'До 12 литров'), ('До 8 литров', 'До 8 литров')], max_length=50, verbose_name='Емкость бака')),
                ('Additional_options', models.CharField(blank=True, choices=[('Отсутствует', 'Отсутствует'), ('С минерализатором', 'С минерализатором'), ('С полифостфатом', 'С полифостфатом')], max_length=50, verbose_name='Дополнительные опции')),
                ('PrType', models.CharField(blank=True, choices=[('Аксессуары и запчасти', 'Аксессуары и запчасти'), ('Прочее', 'Прочее'), ('Осмос', 'Осмос'), ('Система', 'Система'), ('Фильтр от накипи', 'Фильтр от накипи'), ('Контейнер под загрузку', 'Контейнер под загрузку'), ('Механической очистки', 'Механической очистки'), ('Обезжелезивания и деманганации', 'Обезжелезивания и деманганации'), ('Угольный гранулированный', 'Угольный гранулированный'), ('Угольный прессованый', 'Угольный прессованый'), ('Умягчения', 'Умягчения'), ('корпуса для осмосов', 'корпуса для осмосов'), ('обратноосмотические мембраны', 'обратноосмотические мембраны'), ('2-х и 3-х ходовые клапана', '2-х и 3-х ходовые клапана'), ('Запчасти и комплектующие', 'Запчасти и комплектующие'), ('Инжектора', 'Инжектора'), ('Комплектующие (ПВХ и т. п.)', 'Комплектующие (ПВХ и т. п.)'), ('Комплектующие осмос', 'Комплектующие осмос'), ('Тарировочные шайбы', 'Тарировочные шайбы'), ('Емкость', 'Емкость'), ('Комплектующие', 'Комплектующие'), ('для дозации', 'для дозации'), ('Копмплектующие и запчасти', 'Копмплектующие и запчасти'), ('Марганцовочный', 'Марганцовочный'), ('Солевой', 'Солевой'), ('Импульсные', 'Импульсные'), ('Аналоговые', 'Аналоговые'), ('Цифровые', 'Цифровые'), ('Верхние дистрибьюторы и распред. системы', 'Верхние дистрибьюторы и распред. системы'), ('Нижние дистрибьюторы и распред. системы', 'Нижние дистрибьюторы и распред. системы'), ('Трубы', 'Трубы')], max_length=50, verbose_name='Тип')),
                ('For_flasks', models.CharField(blank=True, choices=[('Ключи', 'Ключи'), ('Кронштейны', 'Кронштейны'), ('Прочее', 'Прочее')], max_length=50, verbose_name='Для колб')),
                ('Application', models.CharField(blank=True, choices=[('Бытовое', 'Бытовое'), ('Промышленное', 'Промышленное'), ('На холодную воду', 'На холодную воду')], max_length=50, verbose_name='Применение')),
                ('Performance', models.CharField(blank=True, choices=[('100 GPD', '100 GPD'), ('50 GPD', '50 GPD'), ('60 GPD', '60 GPD'), ('75 GPD', '75 GPD'), ('более 1м3/час', 'более 1м3/час'), ('до 1м3/час', 'до 1м3/час')], max_length=50, verbose_name='Производительность')),
                ('Size', models.CharField(blank=True, choices=[('1812', '1812'), ('2012', '2012'), ('2521', '2521'), ('2540', '2540'), ('2812', '2812'), ('3012', '3012'), ('4021', '4021'), ('4040', '4040'), ('8040', '8040')], max_length=50, verbose_name='Размер')),
                ('Microtity', models.CharField(blank=True, choices=[('не измеряется', 'не измеряется')], max_length=50, verbose_name='Микротность')),
                ('Fitting', models.CharField(blank=True, choices=[('JC (резьба)', 'JC (резьба)'), ('JG (быстросъемное)', 'JG (быстросъемное)')], max_length=50, verbose_name='Фитинги')),
                ('Cartridge_size', models.CharField(blank=True, choices=[('прочее', 'прочее')], max_length=50, verbose_name='Размер картриджа')),
                ('Volume', models.CharField(blank=True, choices=[('1000 л', '1000 л'), ('10000 л', '10000 л'), ('120 л', '120 л'), ('1250 л', '1250 л'), ('15000 л', '15000 л'), ('200 л', '200 л'), ('2000 л', '2000 л'), ('210 л', '210 л'), ('250 л', '250 л'), ('3000 л', '3000 л'), ('330 л', '330 л'), ('440 л', '440 л'), ('500 л', '500 л'), ('5000 л', '5000 л'), ('550 л', '550 л'), ('700 л', '700 л'), ('780 л', '780 л'), ('8000 л', '8000 л'), ('100 л', '100 л'), ('140 л', '140 л'), ('145 л', '145 л'), ('60 л', '65 л'), ('70 л', '70 л'), ('750 л', '750 л')], max_length=50, verbose_name='Объем')),
                ('Form', models.CharField(blank=True, choices=[('горизонтальная', 'горизонтальная'), ('круглая', 'круглая'), ('прямоугольная', 'прямоугольная')], max_length=50, verbose_name='Форма')),
                ('Accession', models.CharField(blank=True, choices=[('DN125(фланец)', 'DN125(фланец)'), ('DN15', 'DN15'), ('DN150(фланец)', 'DN150(фланец)'), ('DN20', 'DN20'), ('DN25', 'DN25'), ('DN32', 'DN32'), ('DN40', 'DN40'), ('DN50', 'DN50'), ('DN65(фланец)', 'DN65(фланец)'), ('DN80(фланец)', 'DN80(фланец)')], max_length=50, verbose_name='Присоединение')),
                ('View', models.CharField(blank=True, choices=[('Бок. посадка', 'Бок. посадка'), ('Стандарт', 'Стандарт')], max_length=50, verbose_name='Вид')),
                ('For_enclosures', models.CharField(blank=True, choices=[('0817-3672', '0817-3672'), ('4272-6386', '4272-6386'), ('4272-6386', '4272-6386')], max_length=50, verbose_name='Для корпусов')),
                ('About', models.TextField()),
                ('Value', models.IntegerField()),
                ('Price', models.IntegerField()),
            ],
        ),
    ]
